//Maximum size square sub matrix with all is


#include<stdio.h>
#define R 4
#define C 4

void MSSM (int mat[R][C])
{
int i,j,size;
int result[R][C];
int max_of_result,max i ,max j;

//set of first column of result [][]
for (i=0;i<R;i++)
     result[i][0]=mat[i][0];

//construct other entries of result[][]
for(i=1;i<R;i++)
{
 for(j=1;j<C;j++)
{
if(mat[i][j]==1)
result[i][j]=1+min_fun(result[i][j-1], 
                     result[i-1][j], 
                     result[i-1][j-1]);
  else
    result[i][j]=0;
  }
size=result[R-1][C-1];
}
//Find maxium entry and indexes of maximum entry in result[][]
max_of_result=result[0][0];
maxi=0;
maxj=0;
for(i=0;i<R;i++)
{
 for(j=0;j<C;j++)
 {
 if(max_of_result<result[i][j])
 {
    max_of_resul=result[i][j];
    maxi=i;
    maxj=j;
 }
 }
} //for close

printf("Maximum size sub square-matrix is: \n");
for(i=maxi;i>maxi-max_of_result;i--)
{
 for(j=maxj;j>maxj-max_of_result;j--)
 {
 printf(:%d",mat[i][j]):
 }
 printf("\n");
}
printf("\n Maximum sub-square-matrix size=%d",size);
}

//**************

int min_fun(int x, int y, int z)
{
int m=x;
if(m>y)
m=y;
if(m>z)
m=z;
return(m);
}

//******

int main()
{
int mat[R][C]={{0,1,1,0,1},
               {1,1,1,1,0},
               {0,1,1,1,0},
               {0,1,1,1,1},
};
MSSM(mat);
}
